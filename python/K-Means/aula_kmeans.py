# -*- coding: utf-8 -*-
"""aula_KMeans.ipynb

Automatically generated by Colaboratory.

Original file is located at
    https://colab.research.google.com/drive/1ulZ-wnDIS4i9G0suf7sF-ZTwXUCT4YXf
"""

# https://colab.research.google.com/github/jakevdp/PythonDataScienceHandbook/blob/master/notebooks/05.11-K-Means.ipynb#scrollTo=i4aDZ0fL1Jdo
import matplotlib.pyplot as plt  #importante para mostrar os resultados

# https://docs.w3cub.com/scikit_learn/modules/generated/sklearn.datasets.make_blobs
from sklearn.datasets.samples_generator import make_blobs # gera blobs (bolhas, borrão, partículas)

# retorna X = As amostras e Y=Rótulos associados
X, y_true = make_blobs(n_samples=300, centers=4,
                       cluster_std=0.60, random_state=0)

print(X.shape)

print(X)
print("Rótulos= ",y_true)

# https://matplotlib.org/stable/api/_as_gen/matplotlib.pyplot.scatter.html
# x,y - as posições de dados e s= tamanho do marcador
plt.scatter(X[:, 0], X[:, 1], s=30);

"""A olho nu, é relativamente fácil identificar os quatro grupos. O algoritmo k -means faz isso automaticamente ."""

# Visualizar os resultados plotando os dados coloridos por esses rótulos.
# Também traçaremos os centros do cluster conforme determinado pelo estimador k -means:
# https://scikit-learn.org/stable/modules/generated/sklearn.cluster.KMeans.html
from sklearn.cluster import KMeans
kmeans = KMeans(n_clusters=4)
kmeans.fit(X)
y_kmeans = kmeans.predict(X)

plt.scatter(X[:, 0], X[:, 1], c=y_kmeans, s=50, cmap='viridis')

centers = kmeans.cluster_centers_
plt.scatter(centers[:, 0], centers[:, 1], c='red', s=170, alpha=0.7);